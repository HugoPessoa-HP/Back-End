// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Criar migration: npm prisma migrate dev
model Pesquisador{
  id Int @id @default(autoincrement()) 
  cpf String
  email String
  nome String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("pesquisadores")
 // ocorrencia Ocorrencia[]
}

model Estado{
  id Int @id @default(autoincrement())
  nome_Estado String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("estados")
  cidade Cidade[]
}
model Cidade{
  id Int @id @default(autoincrement())
  nome_Cidade String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  estado_id Int

  @@map("cidades")
  estado Estado @relation(fields: [estado_id], references: [id])
  parque Parque[]
}

model Parque{
  id Int @id @default(autoincrement())
  nome_Parque String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  cidade_id Int

  @@map("parques")
  cidade Cidade @relation(fields: [cidade_id], references: [id])
  trilha Trilha[]
}
model Trilha{
  id Int @id @default(autoincrement())
  nome_Trilha String
  referencia1 String
  referencia2 String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  parque_id Int
  parque Parque @relation(fields: [parque_id], references: [id])

  @@map("trilhas")
  planta Planta[]
 // ocorrencia Ocorrencia[]
}

// Trilhas
model Planta{
  id Int @id @default(autoincrement())
  vernaculo1 String //Nome Comum
  vernaculo2 String
  vernaculo3 String
  nome_Cientifico String
  familia String
  origem String
  habito String
  banner String
  trilha_id Int
  trilha Trilha @relation(fields: [trilha_id], references: [id])

  @@map("plantas")
  // ocorrencia Ocorrencia[]
}

//model Ocorrencia{
//  id String @id @default(uuid())
//  long Float
//  lat Float
//  gps Int
//  status Boolean
//  pesquisador_id String
//  planta_id String
//  trilha_id String

//  pesquisador Pesquisador @relation(fields: [pesquisador_id], references: [id])
//  planta Planta @relation(fields: [planta_id], references: [id])
//  local Trilha @relation(fields: [trilha_id], references: [id])

//  @@map("ocorrencias")
//}